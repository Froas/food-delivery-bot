services:
  db:
    image: postgres:17
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"  
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  backend-api:
    build:
      context: ./backend
    container_name: backend-api
    volumes:
      - ./sample_data.csv:/usr/local/app/sample_data.csv
      - ./BlockedPaths.csv:/usr/local/app/BlockedPaths.csv
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_HOST: db    
      DB_PORT: 5432
      LOGGING_LEVEL: ${LOGGING_LEVEL:-INFO}
      DATABASE_URL: postgresql+psycopg2://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}
      PASS_KEY: ${PASS_KEY} 
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health > /dev/null || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 20s

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    depends_on:
      backend-api:
        condition: service_healthy
    ports:
      - "5173:5173"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5173/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 12
      start_period: 10s
      
volumes:
  pgdata:
